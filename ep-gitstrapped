#!/bin/bash --posix
# https://gitstrapped.elasticprovisioner.com/ep-gitstrapped-2013032301
# (C) Asher Bond 2011-2013
# GitStrapped is a runtime bootstrapping utility for automated deployment of software application
# code atop a virtual or paravirtual machine or even a physical machine.. if that's what you're into.
# 
# GitStrapped also serves as the client of a Test-Driven-DevOps PaaS framework for distributed systems developers.
#
# Please read the License (AGPL v3)
# http://gitstrapped.elasticprovisioner.com/LICENSE-AGPLv3.txt
# or
# https://www.gnu.org/licenses/agpl-3.0.de.html
# 
# To install @GitStrapped:
# curl http://gitstrapped.elasticprovisioner.com/install-gitstrapped | bash
#
# A STRAP is a Service Template Running A Process
# A STRAP may be licensed to you under similar or different terms.
# A STRAP may be licensed to the public under AGPLv3 or a more permissive license such as LGPL or BSD or GNU or Apache License.
# A provisioner may invoke the STRAP at his or her own risk via ep-gitstrapped <strap>
#
# Special thanks to Elastic Provisioner, Inc. and friends in the open-source community.
# Please also join me in support of the Electronic Frontier Foundation (Defending Your Rights In The Digital World)
# https://www.eff.org/

# defaults
export STRAP_CACHE='/var/cache/gitstrapped'
export STRAP_DIR_PERMS=330
export STRAP_PERMS=550
SYNTAX='ep-gitstrapped <strap>'

if [ -z "$1" ]; then
	echo "$SYNTAX"
	exit
fi

# try to read the .gitstrapped config file if it exists
# (may override defaults)
if [ -x ~/.gitstrapped ]; then
	. ~/.gitstrapped
fi

# change this to your elastic provisioner implementation if you want
# Contact @AsherBond or @eProvisioner to inquire about a professional or commercial deployment.
# source@elasticprovisioner.com
ep_repo='https://gitstrapped.elasticprovisioner.com'

strap="$1"
shift

# if we already have it in the local cache just run it from the local cache
if [ -x $STRAP_CACHE/$strap ]; then
	$STRAP_CACHE/$strap $@
	exit
fi

if [ "$strap" = "cat" ]; then
	strap=$1
	shift
	curl -s -1 -k "$ep_repo/$strap"
	exit
fi

# create the strap cache if it doesn't exist.
if [ ! -e $STRAP_CACHE ]; then
	mkdir -p $STRAP_CACHE && chmod $STRAP_DIR_PERMS $STRAP_CACHE
fi

# cache the strap locally if we have the proper permissions
# except for cases where the remote "strap" is dynamic
if [ -w $STRAP_CACHE ] && ( echo $strap | grep -qe '-[0-9]\{10\}$' ) ; then
	curl -s -1 -k "$ep_repo/$strap" > "$STRAP_CACHE/$strap" && chmod $STRAP_PERMS "$STRAP_CACHE/$strap"
	$STRAP_CACHE/$strap $@
	exit
fi


if [ ! -z "$1" ]; then
	curl -s -1 -k "$ep_repo/$strap" | bash -s "$@"
else	curl -s -1 -k "$ep_repo/$strap" | bash 
fi

